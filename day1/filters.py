# -*- coding: utf-8 -*-
"""filters

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lngwP5VXnWvhGIvQmEFGpTKE1DA-LMID
"""

import cv2
import numpy as np
from google.colab.patches import cv2_imshow

img=cv2.imread('/content/saltnpepper.jpeg')
img=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
cv2_imshow(img)
print(img)

def med(img):
  flat_reg = img.flatten()
  sort = np.sort(flat_reg)
  n = len(sort)
  median_value = sort[n // 2]
  return median_value

def apply_med(img, ksize):
  padded = ksize // 2
  padded_img = np.pad(img, pad_width=padded, mode='reflect')
  filtered_img = np.zeros_like(img)

  for i in range(img.shape[0]):
    for j in range(img.shape[1]):
      reg = padded_img[i:i+ksize, j:j+ksize]
      filtered_img[i, j] = med(reg)

  return filtered_img

ksize=3
med_img=apply_med(img,ksize)
cv2_imshow(med_img)

img=cv2.imread('/content/saltnpepper.jpeg')
img=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
cv2_imshow(img)
print(med_img)

img=cv2.imread('/content/random.jpeg')
img=cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
cv2_imshow(img)
print(img)

def convolve(img,kernel):
  img_row,img_col=img.shape
  kernel_row,kernel_col=kernel.shape
  pad_row=kernel_row//2
  pad_col=kernel_col//2
  padded_img=np.pad(img,((pad_row,pad_row),(pad_col,pad_col)),mode='reflect')
  con_img=np.zeros_like(img,dtype=np.float32)

  for i in range(img_row):
    for j in range(img_col):
      reg = padded_img[i:i+kernel_row, j:j+kernel_col]
      con_img[i, j] = np.sum(reg * kernel)

  return con_img

def apply_conv(img):
  float_img = img.astype(np.float32)
  sob_x=np.array([[-1,0,1],[-2,0,2],[-1,0,1]])
  sob_y=np.array([[-1,-2,-1],[0,0,0],[1,2,1]])
  Gx=convolve(float_img,sob_x)
  Gy=convolve(float_img,sob_y)
  mag=np.sqrt(Gx**2+Gy**2)
  normalized= cv2.normalize(mag, None, 0, 255, cv2.NORM_MINMAX)
  normalized= np.uint8(normalized)
  return normalized


conv_img=apply_conv(img)
cv2_imshow(conv_img)
print(conv_img)
cv2_imshow(img)